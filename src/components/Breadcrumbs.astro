---
// Remove current url path and remove trailing slash if exists
const currentUrlPath = Astro.url.pathname.replace(/\/+$/, "");

// Get url array from path
// eg: /tags/tailwindcss => ['tags', 'tailwindcss']
const breadcrumbList = currentUrlPath.split("/").slice(1);

// if breadcrumb is Home > Posts > 1 <etc>
// replace Posts with Posts (page number)
breadcrumbList[0] === "posts" &&
  breadcrumbList.splice(0, 2, `Blog (Seite ${breadcrumbList[1] || 1})`);
---

<nav class="breadcrumb" aria-label="breadcrumb">
  <ul>
    <li>
      <a class="start" href="/">Start</a>
    </li>
    {
      breadcrumbList.map((breadcrumb, index) =>
        index + 1 === breadcrumbList.length ? (
          <li>
            <span
              class={`breadcrumb-span capitalize`}
              aria-current="page"
            >
              {breadcrumb}
            </span>
            <span aria-hidden="true" class="arrow">&nbsp;</span>
          </li>
        ) : (
          <li>
            <a class="breadcrumb-span" href={`/${breadcrumb}`}>{breadcrumb}</a>
            <span aria-hidden="true" class="arrow">&nbsp;</span>
          </li>
        ),
      )
    }
  </ul>
</nav>

<style>
  .breadcrumb {
    --_breadcrumb-color: rgb(var(--color-breadcrumbs));
    --_breadcrumb-radius: 0.6rem;
    max-width: var(--site_width);
    @apply mx-auto py-8 w-full px-4 text-nowrap;
  }
  .breadcrumb ul {
    @apply flex flex-wrap gap-4;
  }
  .breadcrumb ul li {
    @apply flex;
  }
  .breadcrumb ul li a {
    height: 100%;
    @apply capitalize;
  }
  .breadcrumb ul li:not(:last-child) {
    transition: opacity 0.2s ease-in-out;
    @apply opacity-60 hover:opacity-100;
  }
  .start {
    background-color: var(--_breadcrumb-color);
    border-radius: var(--_breadcrumb-radius) 0.2rem 0.2rem var(--_breadcrumb-radius);
    @apply relative p-2 pr-0;
  }
  .start::after {
    content: "";
    height: calc(100% / 1.47);
    border-radius: 0 var(--_breadcrumb-radius) 0 0;
    background-color: inherit;
    transform: translateX(50%) rotate(45deg);
    @apply absolute right-0 aspect-square -z-10;
  }
  .breadcrumb-span {
    background: linear-gradient(90deg, var(--_breadcrumb-color), var(--_breadcrumb-color));
    background-position-x: .5rem;
    background-repeat: no-repeat;
    @apply relative p-2 pl-6 pr-0 bg-no-repeat;
  }
  .breadcrumb-span::before,
  .breadcrumb-span::after {
    content: "";
    background-color: var(--_breadcrumb-color);
    @apply absolute left-0 h-1/2 w-1/2 -z-10;
  }
  .breadcrumb-span::before {
    border-radius: var(--_breadcrumb-radius) var(--_breadcrumb-radius) 0 0;
    top: 0;
    transform: skew(45deg);
  }
  .breadcrumb-span::after {
    border-radius: 0 0 var(--_breadcrumb-radius) var(--_breadcrumb-radius);
    bottom: 0;
    transform: skew(-45deg);
  }
  .arrow {
    border-radius: 0 .2rem .2rem 0;
    background-color: var(--_breadcrumb-color);
    @apply py-2 relative;
  }
  .arrow::after {
    content: "";
    right: 0;
    height: calc(100% / 1.47);
    border-radius: 0 var(--_breadcrumb-radius) 0 0;
    background-color: var(--_breadcrumb-color);
    transform: translateX(50%) rotate(45deg);
    @apply absolute aspect-square -z-10;
  }
</style>
