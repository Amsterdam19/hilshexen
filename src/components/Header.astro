---
import { LOGO_IMAGE, SITE } from "@config";
import Hr from "./Hr.astro";
import LinkButton from "./LinkButton.astro";

export interface Props {
  activeNav?: "index" | "posts" | "tags" | "about" | "search" | "spenden";
}

const { activeNav } = Astro.props;
---
<header class="font-mono">
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <div class="top-nav-wrap">
      <a href="/" class="logo whitespace-nowrap fancy" id="site-title">
        {
          LOGO_IMAGE.enable ? (
            <img
              src={`/assets/${LOGO_IMAGE.svg ? "logo.svg" : "logo.png"}`}
              alt={SITE.title}
              width={LOGO_IMAGE.width}
              height={LOGO_IMAGE.height}
            />
          ) : (
            <>
              <span class="outer">
                <span class="inner" style="animation-delay: -3673ms;">
                  <span class="letter" style="animation-delay: 0ms;">
                    H
                  </span>
                </span>
              </span>
              <span class="outer">
                <span class="inner" style="animation-delay: -547ms;">
                  <span class="letter" style="animation-delay: 1000ms;">
                    i
                  </span>
                </span>
              </span>
              <span class="outer">
                <span class="inner" style="animation-delay: -2630ms;">
                  <span class="letter" style="animation-delay: 2000ms;">
                    l
                  </span>
                </span>
              </span>
              <span class="outer">
                <span class="inner" style="animation-delay: -990ms;">
                  <span class="letter" style="animation-delay: 3000ms;">
                    s
                  </span>
                </span>
              </span>
              <span class="outer">
                <span class="inner" style="animation-delay: -810ms;">
                  <span class="letter" style="animation-delay: 4000ms;">
                    H
                  </span>
                </span>
              </span>
              <span class="outer">
                <span class="inner" style="animation-delay: -4652ms;">
                  <span class="letter" style="animation-delay: 5000ms;">
                    e
                  </span>
                </span>
              </span>
              <span class="outer">
                <span class="inner" style="animation-delay: -3735ms;">
                  <span class="letter" style="animation-delay: 6000ms;">
                    i
                  </span>
                </span>
              </span>
              <span class="outer">
                <span class="inner" style="animation-delay: -4789ms;">
                  <span class="letter" style="animation-delay: 7000ms;">
                    K
                  </span>
                </span>
              </span>
              <span class="outer">
                <span class="inner" style="animation-delay: -4637ms;">
                  <span class="letter" style="animation-delay: 8000ms;">
                    a
                  </span>
                </span>
              </span>
            </>
          )
        }
      </a>
      <nav id="nav-menu">
        <button
          class="hamburger-menu focus-outline"
          aria-label="Navigationsmenu Ã¶ffnen"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <div class="menu-button"></div>
        </button>
        <ul id="menu-items" class="sm:flex">
          <li>
            <a
              href="/"
              class={activeNav === "index" ? "active" : "" + "fancy-link"}
            >
              Start
            </a>
          </li>
          <li>
            <a
              href="/posts"
              class={activeNav === "posts" ? "active" : "" + "fancy-link"}
            >
              Blog
            </a>
          </li>
          <li>
            <a
              href="/spenden"
              class={activeNav === "spenden" ? "active" : "" + "fancy-link"}
            >
              Spenden
            </a>
          </li>
          <li>
            <span class="hover:scale-[1.075] bg-circle">
              <LinkButton
                href="/search"
                className={`focus-outline p-3 sm:p-1 ${
                  activeNav === "search" ? "active" : ""
                } flex`}
                ariaLabel="search"
                title="Suche"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="scale-125 sm:scale-100"
                  ><path
                    d="M19.023 16.977a35.13 35.13 0 0 1-1.367-1.384c-.372-.378-.596-.653-.596-.653l-2.8-1.337A6.962 6.962 0 0 0 16 9c0-3.859-3.14-7-7-7S2 5.141 2 9s3.14 7 7 7c1.763 0 3.37-.66 4.603-1.739l1.337 2.8s.275.224.653.596c.387.363.896.854 1.384 1.367l1.358 1.392.604.646 2.121-2.121-.646-.604c-.379-.372-.885-.866-1.391-1.36zM9 14c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z"
                  ></path>
                </svg>
              </LinkButton>
            </span>
          </li>
          <li>
            {
              SITE.lightAndDarkMode && (
                <button
                  id="theme-btn"
                  class="focus-outline bg-circle"
                  title="Wechsel zwischen hell und dunkel"
                  aria-label="auto"
                  aria-live="polite"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" id="moon-svg">
                    <path d="M20.742 13.045a8.088 8.088 0 0 1-2.077.271c-2.135 0-4.14-.83-5.646-2.336a8.025 8.025 0 0 1-2.064-7.723A1 1 0 0 0 9.73 2.034a10.014 10.014 0 0 0-4.489 2.582c-3.898 3.898-3.898 10.243 0 14.143a9.937 9.937 0 0 0 7.072 2.93 9.93 9.93 0 0 0 7.07-2.929 10.007 10.007 0 0 0 2.583-4.491 1.001 1.001 0 0 0-1.224-1.224zm-2.772 4.301a7.947 7.947 0 0 1-5.656 2.343 7.953 7.953 0 0 1-5.658-2.344c-3.118-3.119-3.118-8.195 0-11.314a7.923 7.923 0 0 1 2.06-1.483 10.027 10.027 0 0 0 2.89 7.848 9.972 9.972 0 0 0 7.848 2.891 8.036 8.036 0 0 1-1.484 2.059z" />
                  </svg>
                  <svg xmlns="http://www.w3.org/2000/svg" id="sun-svg">
                    <path d="M6.993 12c0 2.761 2.246 5.007 5.007 5.007s5.007-2.246 5.007-5.007S14.761 6.993 12 6.993 6.993 9.239 6.993 12zM12 8.993c1.658 0 3.007 1.349 3.007 3.007S13.658 15.007 12 15.007 8.993 13.658 8.993 12 10.342 8.993 12 8.993zM10.998 19h2v3h-2zm0-17h2v3h-2zm-9 9h3v2h-3zm17 0h3v2h-3zM4.219 18.363l2.12-2.122 1.415 1.414-2.12 2.122zM16.24 6.344l2.122-2.122 1.414 1.414-2.122 2.122zM6.342 7.759 4.22 5.637l1.415-1.414 2.12 2.122zm13.434 10.605-1.414 1.414-2.122-2.122 1.414-1.414z" />
                  </svg>
                </button>
              )
            }
          </li>
        </ul>
      </nav>
    </div>
  </div>
  <span class={activeNav === "index" ? "hidden" : ""}> </span>
</header>

<style>
  header {
    @apply z-50 w-full inset-x-0 top-0 sticky;
  }
  #skip-to-content {
    @apply absolute -top-full left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4;
  }
  .nav-container {
    --_animation-time: 400ms;
    max-width: calc(var(--site_width) + 4rem);
    background-color: rgb(var(--color-fill));
    @apply sm:w-full mx-auto flex flex-col justify-center sm:flex-row rounded-none md:rounded-b-2xl;
  }
  .top-nav-wrap {
    max-width: var(--site_width);
    @apply relative flex w-full items-start justify-between p-4 sm:items-center py-6 sm:py-8 rounded-none md:rounded-b-2xl;
  }
  @media (min-width: 74rem) {
    .nav-container {
      background-color: rgba(var(--color-fill), 0.7);
      border: solid 1px rgba(var(--color-fill), 0.8);
      @apply mt-2 backdrop-blur-md rounded-2xl;
    }
  }
  .logo {
    @apply flex absolute text-xl font-semibold sm:static sm:text-2xl;
  }
  .hamburger-menu {
    --_hamburger-heigth: 4px;
    --_hamburger-width: 25px;
    --_hamburger-margin: 8px;
    height: calc(var(--_hamburger-heigth) * 3 + var(--_hamburger-margin) * 2);
    width: var(--_hamburger-width);
    @apply self-end p-0 sm:hidden;
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base;
  }

  nav {
    @apply flex w-full flex-col items-center sm:ml-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0;
  }
  nav ul {
    @apply mt-4 grid w-44 grid-cols-2 grid-rows-4 gap-x-2 gap-y-2 sm:ml-0 sm:mt-0 sm:w-auto sm:gap-x-5 sm:gap-y-0;
  }
  nav ul li {
    @apply col-span-2 flex items-center justify-center;
  }
  nav ul li a {
    @apply px-4 py-3 text-center font-medium hover:text-skin-accent sm:my-0 sm:px-2 sm:py-1;
  }
  nav ul li:nth-last-child(2) a {
    @apply w-auto;
  }
  nav ul li:nth-last-child(1),
  nav ul li:nth-last-child(2) {
    @apply col-span-1;
  }
  nav a.active {
    @apply underline decoration-2 underline-offset-8;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  nav button {
    @apply p-1;
  }
  nav button svg {
    @apply h-6 w-6 fill-skin-base hover:fill-skin-accent;
  }
  #theme-btn {
    @apply p-3 sm:p-1;
  }
  #theme-btn svg {
    @apply scale-125 transition-opacity hover:rotate-12 sm:scale-100;
  }
  .menu-button,
  .menu-button::before,
  .menu-button::after {
    display: block;
    background-color: rgb(var(--color-text-base));
    position: absolute;
    height: var(--_hamburger-heigth);
    width: var(--_hamburger-width);
    transition:
      transform var(--_animation-time) cubic-bezier(0.23, 1, 0.32, 1),
      background var(--_animation-time) cubic-bezier(0.23, 1, 0.32, 1);
    border-radius: 2px;
  }

  .menu-button::before {
    content: "";
    margin-top: calc(var(--_hamburger-margin) * (-1));
  }

  .menu-button::after {
    content: "";
    margin-top: var(--_hamburger-margin);
  }
  .menu-button.is-active::before {
    margin-top: 0px;
    transform: rotate(405deg);
  }
  .menu-button.is-active {
    background: rgba(255, 255, 255, 0);
  }
  .menu-button.is-active::after {
    margin-top: 0px;
    transform: rotate(-405deg);
  }
  @media (max-width: 640px) {
    #nav-menu {
      @apply relative;
    }
    #menu-items {
      box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 15px;
      border-radius: 0.75rem;
      background-color: rgb(var(--color-fill));
      transform: translateY(0rem) scale(0.75);
      transform-origin: top right;
      transition: opacity calc(var(--_animation-time) / 2) ease-in, transform calc(var(--_animation-time) / 2) ease-in;
      @apply opacity-0 overflow-hidden w-full top-full absolute gap-8 py-8 mt-6 pointer-events-none;
    }
    #menu-items.is-active {
      transform: translateY(1rem) scale(1);
      @apply opacity-100 pointer-events-auto;
    }
    .top-nav-wrap {
      box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 15px;
    }
    .bg-circle {
      background-color: rgb(var(--color-fill));
      border-radius: 0.75rem;
      background-color: rgb(var(--color-breadcrumbs));
      color: rgb(var(--color-breadcrumbs-2));
    }
  }
</style>

<script>
  function toggleNav() {
    // Toggle menu
    const menuBtn = document.querySelector(".hamburger-menu");
    const menuIcon = document.querySelector(".menu-button");
    const menuItems = document.querySelector("#menu-items");

    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuIcon?.classList.toggle("is-active");
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu",
      );
      menuItems?.classList.toggle("is-active");
    });
  }

  toggleNav();

  function animateLogo() {
    const rand = (min, max) =>
      Math.floor(Math.random() * (max - min + 1)) + min;

    const enhance = (id) => {
      const element = document.getElementById(id),
        text = element.innerText.split("");

      element.innerText = "";

      text.forEach((value, index) => {
        const outer = document.createElement("span");

        outer.className = "outer";

        const inner = document.createElement("span");

        inner.className = "inner";

        inner.style.animationDelay = `${rand(-5000, 0)}ms`;

        const letter = document.createElement("span");

        letter.className = "letter";

        letter.innerText = value;

        letter.style.animationDelay = `${index * 1000}ms`;

        inner.appendChild(letter);

        outer.appendChild(inner);

        element.appendChild(outer);
      });
    };

    enhance("site-title");
  }

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav);
</script>
