---
const { txt, className } = Astro.props;
---

<h2 data-text={txt} class={`scroll-animation slide animated-h2 w-fit font-semibold my-10 ${className}`}>{txt}</h2>

<style>
  .animated-h2 {
    font-size: clamp(2rem, 1.3878rem + 3.2653vw, 4rem);
  }
  @media (width <= 50rem) {
    .animated-h2 {
      @apply my-[3rem] sm:mb-[7rem] w-full text-center tracking-wide;
    }
  }
  @media (width > 50rem) {
    .animated-h2 {
      --_color-secondary: rgba(var(--color-accent), 0.66);
      --_color-tertiary: rgba(var(--color-accent), 0.33);
      --_shaddow-width: 3px;
      --_animatino-time: 0.2s;
      transition: transform var(--_animatino-time) ease-in-out;
      z-index: 3;
      @apply tracking-wide;
    }
    .animated-h2::before,
    .animated-h2::after {
      content:attr(data-text);
      position: absolute;
      inset: 0;
      transition: transform var(--_animatino-time) ease-in-out;
    }
    .animated-h2::before {
      color: var(--_color-secondary);
      z-index: -1;
    }
    .animated-h2::after {
      color: var(--_color-tertiary);
      z-index: -2;
      

    }
    .animated-h2:hover {
      transform: translate(calc(var(--_shaddow-width) * -2), calc(var(--_shaddow-width) * -2));
    }
    .animated-h2:hover::before {
      transform: translate(calc(var(--_shaddow-width) * 1), calc(var(--_shaddow-width) * 1));
    }
    .animated-h2:hover::after{
      transform: translate(calc(var(--_shaddow-width) * 2), calc(var(--_shaddow-width) * 2));
    }
  }
</style>
