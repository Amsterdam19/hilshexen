---
import socialIcons from "@assets/socialIcons";

const URL = Astro.url;

const shareLinks = [
    {
        name: "WhatsApp",
        href: "https://wa.me/?text=",
        linkTitle: `Teile den Artikel via WhatsApp`,
    },
    {
        name: "Facebook",
        href: "https://www.facebook.com/sharer.php?u=",
        linkTitle: `Teile den Artikel auf Facebook`,
    },
    {
        name: "Twitter",
        href: "https://twitter.com/intent/tweet?url=",
        linkTitle: `Teile den Artikel auf Twitter`,
    },
    {
        name: "Telegram",
        href: "https://t.me/share/url?url=",
        linkTitle: `Teile den Artikel via Telegram`,
    },
    {
        name: "Mail",
        href: "mailto:?subject=Guck%20dir%20diesen%20Artikel%20an&body=",
        linkTitle: `Teile den Artikel via email`,
    },
] as const;
---

<div class={`social-icons`}>
    <h1 class="font-bold mb-3 text-2xl smallH1">Teilen</h1>
    <div class="flex flex-wrap items-center">
        {
            shareLinks.map((social) => (
                <>
                    <a
                        href={`${social.href + URL}`}
                        class={`group inline-block link-button`}
                        title={social.linkTitle}
                    >
                        <Fragment set:html={socialIcons[social.name]} />
                    </a>
                </>
            ))
        }
        <button class="copy" onclick={"navigator.clipboard.writeText('"+URL+"')"}>
            <span
                data-text-end="Kopiert!"
                data-text-initial="In die Zwischenablage kopieren"
                class="tooltip"></span>
            <span>
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                    ><g
                        fill="none"
                        stroke="currentColor"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        ><path
                            d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"
                        ></path><path
                            d="M9 5a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v0a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2"
                        ></path></g
                    ></svg
                >
            </span>
        </button>
    </div>
</div>

<style>
    .social-icons {
        @apply flex flex-col flex-wrap gap-1;
    }
    .link-button {
        @apply scale-90 p-2 hover:rotate-6 sm:p-1;
    }
    .link-button:not(:hover) {
        background-color: transparent !important;
    }
    .copy {
        /* button */
        --button-bg: transparent;
        --button-hover-bg: rgb(var(--color-breadcrumbs));
        --button-text-color: rgb(var(--color-breadcrumbs-2));
        --button-hover-text-color: rgb(var(--color-breadcrumbs-2));
        --button-border-radius: 10px;
        --button-diameter: 36px;
        --button-outline-width: 1px;
        --button-outline-color: rgb(141, 141, 141);
        /* tooltip */
        --tooltip-bg: rgb(var(--color-text-base));
        --toolptip-border-radius: 4px;
        --tooltip-font-family: monospace;
        --tooltip-font-size: 12px;
        --tootip-text-color: rgb(var(--color-fill));
        --tooltip-padding-x: 7px;
        --tooltip-padding-y: 7px;
        --tooltip-offset: 8px;
        --tooltip-transition-duration: 0.3s;
    }

    .copy {
        box-sizing: border-box;
        width: var(--button-diameter);
        height: var(--button-diameter);
        border-radius: var(--button-border-radius);
        background-color: var(--button-bg);
        color: var(--button-text-color);
        border: none;
        cursor: pointer;
        position: relative;
        outline: none;
        border-radius: clamp(0.5rem, 0.75rem, 1rem);
        @apply p-1  sm:p-[0.4rem] h-[50.4px] w-[50.4px] sm:h-[43.2px] sm:w-[43.2px] opacity-90 hover:opacity-100;
    }

    .tooltip {
        position: absolute;
        opacity: 0;
        visibility: 0;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        white-space: nowrap;
        font: var(--tooltip-font-size) var(--tooltip-font-family);
        color: var(--tootip-text-color);
        background: var(--tooltip-bg);
        padding: var(--tooltip-padding-y) var(--tooltip-padding-x);
        border-radius: var(--toolptip-border-radius);
        pointer-events: none;
        transition: all var(--tooltip-transition-duration)
            cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .tooltip::before {
        content: attr(data-text-initial);
    }

    .tooltip::after {
        content: "";
        position: absolute;
        bottom: calc(var(--tooltip-padding-y) / 2 * -1);
        width: var(--tooltip-padding-y);
        height: var(--tooltip-padding-y);
        background: inherit;
        left: 50%;
        transform: translateX(-50%) rotate(45deg);
        z-index: -999;
        pointer-events: none;
    }

    .copy svg {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .checkmark {
        display: none;
    }

    /* actions */

    .copy:hover .tooltip,
    .copy:focus:not(:focus-visible) .tooltip {
        opacity: 1;
        visibility: visible;
        top: calc((100% + var(--tooltip-offset)) * -1);
    }

    .copy:focus:not(:focus-visible) .tooltip::before {
        content: attr(data-text-end);
    }

    .copy:focus:not(:focus-visible) .clipboard {
        display: none;
    }

    .copy:focus:not(:focus-visible) .checkmark {
        display: block;
    }

    .copy:hover,
    .copy:focus {
        background-color: var(--button-hover-bg);
    }

    .copy:active {
        outline: var(--button-outline-width) solid var(--button-outline-color);
    }

    .copy:hover svg {
        color: var(--button-hover-text-color);
    }
</style>