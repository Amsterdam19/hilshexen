---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import LinkButton from "@components/LinkButton.astro";
import Hr from "@components/Hr.astro";
import TurbulentSvg from "@components/TurbulentSvg.astro";
import Card from "@components/Card";
import getSortedPosts from "@utils/getSortedPosts";
import slugify from "@utils/slugify";
import { getImage } from "astro:assets";
import Socials from "@components/Socials.astro";

const posts = await getCollection("blog");

const sortedPosts = getSortedPosts(posts);
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);

//Images
import heroImage from '@assets/oetztal_soelden.jpg';
import Button from "@components/Button.astro";
import Motivation from "@components/Motivation.astro";
import AnimatedH2 from "@components/AnimatedH2.astro";
const optimizedBackground = await getImage({src: heroImage, format: 'webp'})
---

<Layout identity={true}>
  <Header activeNav="index"/>
  <main id="main-content">
    <section id="hero" class="max-w-none bg-no-repeat bg-cover" style={`background-image: url(${optimizedBackground.src});`}>
      <div class="heroContent">
      <h1 class="strokeme">Dies ist mein Blog</h1>
      <Button url="/posts" icon="round_volunteer_activism" txt="Spenden" className="ml-[4%]"/>        
      </div>
      <div class="heroSocial" aria-label="Folgt mir auf Instagram, Facebook oder per RSS">
        <p>Folgt mir auf:</p>
        <Socials/>
      </div>
    </section>

    <Motivation/>
    
    <TurbulentSvg/>
    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured">
            <AnimatedH2 txt="Vorgestellt"/>
            <ul class="postUl">
              {featuredPosts.map(({ data }) => (
                <Card
                  href={`/posts/${slugify(data)}`}
                  frontmatter={data}
                  secHeading={false}
                />
              ))}
            </ul>
          </section>
          <Hr />
        </>
      )
    }

    <section id="recent-posts">
      <AnimatedH2 txt="Letzte Einträge"/>
      <ul class="postUl">
        {
          sortedPosts
            .filter(({ data }) => !data.featured)
            .map(
              ({ data }, index) =>
                index < 4 && (
                  <Card
                    href={`/posts/${slugify(data)}`}
                    frontmatter={data}
                    secHeading={false}
                  />
                )
            )
        }
      </ul>
      <div class="all-posts-btn-wrapper">
        <LinkButton href="/posts">
          Alle Blogeinträge
          <svg xmlns="http://www.w3.org/2000/svg"
            ><path
              d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
            ></path>
          </svg>
        </LinkButton>
      </div>
    </section>
  </main>

  <Footer />
  <script>
    declare global {
      interface Window {
        netlifyIdentity: any;
      }
    }

    if (window.netlifyIdentity) {
      window.netlifyIdentity.on("init", ((user: any) => {
      if (!user) {
        window.netlifyIdentity.on("login", () => {
        document.location.href = "/admin/";
        });
      }
      }));
    }
    </script>
</Layout>

<style>
  /* ===== Hero Section ===== */
  #hero {
    display: grid;
    grid-template-areas: "content content", "social" "social";
    grid-template-rows: auto 4rem;
    background-position: center;
    height: 90vh;
    height: 90svh;
    min-height: 500px;
    padding-inline: 1rem;
    @apply pb-6 pt-8 px-0;
  }
  .heroContent {
    grid-area: "content";
    display: grid;
    gap: 1.5rem;
    align-content: center;
    justify-content: flex-start;
    margin-inline: 1rem;
    @apply lg:ml-[15%]
  }
  .heroSocial {
    grid-area: "social";
    justify-self: flex-end;
    align-items: center;
    background-color: rgba(var(--color-fill));
    border-radius: 2rem 0 0 2rem;
    @apply grid h-[85px] py-1 nm:gap-4 nm:pl-8 pl-2 nm:flex nm:h-auto nm:py-2
  }
  #hero h1 {
    color: rgb(var(--color-fill));
    @apply my-4 inline-block text-6xl font-black sm:my-8 sm:text-7xl;
  }
  #hero .rss-link {
    @apply mb-6;
  }
  #hero .rss-icon {
    @apply mb-2 h-6 w-6 scale-110 fill-skin-accent sm:mb-3 sm:scale-125;
  }
  #hero p {
    @apply my-2;
  }
  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Posts Sections ===== */
  #featured,
  #recent-posts {
    @apply pb-6 pt-12;
  }
  article {
    display: inline-block;
    transition: all .5s ease-in;
    @apply text-4xl font-semibold tracking-wide underline;
  }
  article:hover {
    text-decoration-color: rgb(var(--color-accent));
    text-decoration-thickness: 10px;
  }
  .all-posts-btn-wrapper {
    @apply my-8 text-center;
  }
</style>
